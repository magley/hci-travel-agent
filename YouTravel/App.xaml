<Application
    x:Class="YouTravel.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:YouTravel"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <!--  Other styles  -->

        <!--  https://stackoverflow.com/questions/13624606  -->
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Image}">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
        </Style>

        <!--  Dark Theme  -->

        <SolidColorBrush x:Key="bg_dark0" Color="#1F1F1F" />
        <SolidColorBrush x:Key="bg_dark1" Color="#2E2E2E" />
        <SolidColorBrush x:Key="bg_dark2" Color="#383838" />
        <SolidColorBrush x:Key="bg_dark3" Color="#666666" />
        <SolidColorBrush x:Key="bg_dark4" Color="#858585" />

        <Style x:Key="WinDark" TargetType="{x:Type Window}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style x:Key="UCDark" TargetType="{x:Type UserControl}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style x:Key="PageDark" TargetType="{x:Type Page}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="LightGray"
                            BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark3}" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource bg_dark0}" />
                    <Setter Property="Foreground" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="LightGray"
                            BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark3}" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource bg_dark0}" />
                    <Setter Property="Foreground" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
            <Setter Property="Foreground" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
            <Setter Property="Foreground" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource bg_dark0}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="{DynamicResource bg_dark0}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border
                                Name="Border"
                                Margin="0,0,2,0"
                                Background="#F0F0F0"
                                BorderBrush="LightGray"
                                BorderThickness="1,1,1,0"
                                CornerRadius="4,4,0,0"
                                SnapsToDevicePixels="True">
                                <TextBlock
                                    Name="TextBlock"
                                    HorizontalAlignment="Center"
                                    FontSize="15"
                                    Foreground="DarkGray">
                                    <ContentPresenter
                                        x:Name="ContentSite"
                                        Margin="12,2,12,2"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header" />
                                </TextBlock>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource bg_dark3}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource bg_dark3}" />
                                <Setter TargetName="TextBlock" Property="Background" Value="{DynamicResource bg_dark2}" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="White" />
                                <Setter TargetName="TextBlock" Property="FontWeight" Value="SemiBold" />
                                <Setter TargetName="TextBlock" Property="FontSize" Value="14" />
                                <Setter TargetName="Border" Property="Margin" Value="0,0,2,-1" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource bg_dark1}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource bg_dark1}" />
                                <Setter TargetName="TextBlock" Property="Background" Value="{DynamicResource bg_dark0}" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource bg_dark3}" />
                                <Setter TargetName="TextBlock" Property="FontSize" Value="14" />
                                <Setter TargetName="Border" Property="Margin" Value="0,0,2,-1" />
                            </Trigger>
                            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Foreground" Value="White" />
        </Style>

        <!--  Toolbar Theme  -->

        <Style TargetType="{x:Type ToolBar}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="{DynamicResource bg_dark0}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <Style TargetType="{x:Type ToolBarTray}">
            <Setter Property="Background" Value="{DynamicResource bg_dark0}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource bg_dark0}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="ToolBarButtonHover" Color="#FF0080FF" />
        <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5" />
        <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FF1f1f1f" />
        <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="#FFEEF5FD" />
        <SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D" />
        <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#FFEEF5FD" />
        <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="#FFEEF5FD" />
        <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="0,0,11,0" />
            <Setter Property="CornerRadius" Value="3,3,3,3" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="CornerRadius" Value="0,0,0,0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <!--  The thingy to move toolbars around  -->
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <DrawingBrush
                                        TileMode="Tile"
                                        Viewbox="0,0,4,4"
                                        ViewboxUnits="Absolute"
                                        Viewport="0,0,4,4"
                                        ViewportUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="Gray" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                                <GeometryDrawing Brush="{StaticResource bg_dark0}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="SizeAll" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">

            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--  Thingy with the arrow at the end of every toolbar.  -->
                        <Border
                            x:Name="Bd"
                            Background="{StaticResource bg_dark0}"
                            CornerRadius="0,3,3,0"
                            SnapsToDevicePixels="true"
                            Visibility="Visible">
                            <Canvas
                                Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                                <!--  2 elements were removed here, which effectively draw a shadow for the little arrow thing.  -->
                                <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}" />
                                <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource bg_dark2}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource bg_dark2}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0,0,3,3"
                            SnapsToDevicePixels="true">
                            <Canvas
                                Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                                <Path Data="M 1.5 1 L 1.5 6" Stroke="White" />
                                <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}" />
                                <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White" />
                                <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ToolBarTemplate1" TargetType="{x:Type ToolBar}">
            <Grid
                x:Name="Grid"
                Margin="3,1,1,1"
                SnapsToDevicePixels="true">
                <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                    <!--  Background and Foreground are changed here.  -->
                    <ToggleButton
                        x:Name="OverflowButton"
                        Background="{DynamicResource bg_dark3}"
                        ClickMode="Press"
                        FocusVisualStyle="{x:Null}"
                        Foreground="White"
                        IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        IsEnabled="{TemplateBinding HasOverflowItems}"
                        Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" />
                    <Popup
                        x:Name="OverflowPopup"
                        AllowsTransparency="true"
                        Focusable="false"
                        IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        Placement="Bottom"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuFade}}"
                        StaysOpen="false">
                        <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                            <Border
                                x:Name="ToolBarSubMenuBorder"
                                Background="{StaticResource ToolBarSubMenuBackground}"
                                BorderBrush="{StaticResource ToolBarMenuBorder}"
                                BorderThickness="1"
                                RenderOptions.ClearTypeHint="Enabled">
                                <ToolBarOverflowPanel
                                    x:Name="PART_ToolBarOverflowPanel"
                                    Margin="2"
                                    FocusVisualStyle="{x:Null}"
                                    Focusable="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    WrapWidth="200" />
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                </Grid>
                <Border
                    x:Name="MainPanelBorder"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Style="{StaticResource ToolBarMainPanelBorderStyle}">
                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                        <Thumb
                            x:Name="ToolBarThumb"
                            Width="10"
                            Margin="-3,-1,0,0"
                            Padding="6,5,1,6"
                            Style="{StaticResource ToolBarThumbStyle}" />
                        <ContentPresenter
                            x:Name="ToolBarHeader"
                            Margin="4,0,4,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ToolBarPanel
                            x:Name="PART_ToolBarPanel"
                            Margin="0,1,2,2"
                            IsItemsHost="true"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsOverflowOpen" Value="true">
                    <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                </Trigger>
                <Trigger Property="Header" Value="{x:Null}">
                    <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="ToolBarTray.IsLocked" Value="true">
                    <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                    <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                    <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
                    <Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                    <Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
                    <Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
                    <Setter TargetName="ToolBarThumb" Property="Margin" Value="-1,-3,0,0" />
                    <Setter TargetName="ToolBarThumb" Property="Padding" Value="5,6,6,1" />
                    <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
                    <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
                    <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
                    <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                    <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
                    <Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
                    <Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
                    <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
                    <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  Menu Theme  -->
        <!--
			How to use:
			Given the following menu hierarchy:
		
			<Menu>
				<MenuItem>
					<MenuItem>
						<MenuItem/>
						<MenuItem/>
					<MenuItem/>
				</MenuItem>
			</Menu>
		
			Apply templates like so:
		
			<Menu>
				<MenuItem>
					<MenuItem     Template="{DynamicResource MenuItemTemplate}">
						<MenuItem Template="{DynamicResource FinalSubMenuItemTemplate}"/>
						<MenuItem Template="{DynamicResource FinalSubMenuItemTemplate}"/>
					<MenuItem     Template="{DynamicResource FinalSubMenuItemTemplate}"/>
				</MenuItem>
			</Menu>
		
			If level 1 menu item -> don't apply any template.
			If menuitem has children -> apply MenuItemTemplate.
			Else apply FinalSubMenuItemTemplate.
			Source: https://www.reddit.com/r/csharp/comments/dubxh1
		-->

        <!--  Menu style. automatically does stuff so no need to use template things.  -->
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource bg_dark0}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  MenuItem style  -->

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Padding" Value="6" />
            <Style.Triggers>
                <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border
                                    x:Name="templateRoot"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                    <Grid VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter
                                            x:Name="Icon"
                                            Width="16"
                                            Height="16"
                                            Margin="3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Icon"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        <Path
                                            x:Name="GlyphPanel"
                                            Margin="3"
                                            VerticalAlignment="Center"
                                            Data="F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z"
                                            Fill="White"
                                            FlowDirection="LeftToRight"
                                            Visibility="Collapsed" />
                                        <ContentPresenter
                                            Grid.Column="1"
                                            Margin="{TemplateBinding Control.Padding}"
                                            ContentSource="Header"
                                            RecognizesAccessKey="true"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                                        <Popup
                                            x:Name="PART_Popup"
                                            AllowsTransparency="true"
                                            Focusable="false"
                                            IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                            Placement="Bottom"
                                            PlacementTarget="{Binding ElementName=templateRoot}"
                                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">

                                            <!--  Menu background color is changed here vvvv  -->
                                            <Border
                                                x:Name="SubMenuBorder"
                                                Padding="2"
                                                Background="{StaticResource bg_dark1}"
                                                BorderBrush="{StaticResource bg_dark1}"
                                                BorderThickness="1">
                                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas
                                                            Width="0"
                                                            Height="0"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Top">
                                                            <Rectangle
                                                                Name="OpaqueRect"
                                                                Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                                Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                                                Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                                        </Canvas>
                                                        <ItemsPresenter
                                                            x:Name="ItemsPresenter"
                                                            Grid.IsSharedSizeScope="true"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>

                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                    </Trigger>
                                    <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="MenuItem.IsChecked" Value="true">
                                        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <!--  Mouse Over basically  -->
                                    <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                        <Setter TargetName="templateRoot" Property="Background" Value="#3e3e40" />
                                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="#3e3e40" />
                                    </Trigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="false">
                                        <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                                        <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#FF707070" />
                                    </Trigger>
                                    <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                                        <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                                        <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
            <Border
                x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="Auto"
                            MinWidth="22"
                            SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="13" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                        x:Name="Icon"
                        Width="16"
                        Height="16"
                        Margin="3"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Icon}"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Border
                        x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="-1,0,0,0"
                        VerticalAlignment="Center"
                        Background="#771b1b1c"
                        BorderBrush="#99FBFF"
                        BorderThickness="1"
                        Visibility="Hidden">
                        <Path
                            x:Name="Glyph"
                            Width="9"
                            Height="11"
                            Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                            Fill="#99FBFF"
                            FlowDirection="LeftToRight" />
                    </Border>
                    <ContentPresenter
                        Grid.Column="2"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Header}"
                        ContentSource="Header"
                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock
                        Grid.Column="4"
                        Margin="{TemplateBinding Padding}"
                        VerticalAlignment="Center"
                        Opacity="0.7"
                        Text="{TemplateBinding InputGestureText}" />
                    <Path
                        x:Name="RightArrow"
                        Grid.Column="5"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Data="M0,0L4,3.5 0,7z"
                        Fill="White" />
                    <Popup
                        x:Name="PART_Popup"
                        AllowsTransparency="True"
                        Focusable="False"
                        HorizontalOffset="2"
                        IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        Placement="Right"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                        VerticalOffset="-3">
                        <!--  Submenu background color is changed here vvvv  -->
                        <Border
                            x:Name="SubMenuBorder"
                            Padding="2"
                            Background="{StaticResource bg_dark1}"
                            BorderBrush="{StaticResource bg_dark1}"
                            BorderThickness="1">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            x:Name="OpaqueRect"
                                            Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                            Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                            Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                    </Canvas>
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        Grid.IsSharedSizeScope="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter TargetName="templateRoot" Property="Background" Value="#3e3e40" />
                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="#3e3e40" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                    <Setter TargetName="Glyph" Property="Fill" Value="#FF707070" />
                    <Setter TargetName="RightArrow" Property="Fill" Value="#FF707070" />
                </Trigger>
                <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                    <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                    <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="FinalSubMenuItemTemplate" TargetType="{x:Type MenuItem}">
            <Border
                x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="Auto"
                            MinWidth="22"
                            SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="13" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                        x:Name="Icon"
                        Width="16"
                        Height="16"
                        Margin="3"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Icon}"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Border
                        x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="-1,0,0,0"
                        VerticalAlignment="Center"
                        Background="#771b1b1c"
                        BorderBrush="#99FBFF"
                        BorderThickness="1"
                        Visibility="Hidden">
                        <Path
                            x:Name="Glyph"
                            Width="9"
                            Height="11"
                            Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                            Fill="#99FBFF"
                            FlowDirection="LeftToRight" />
                    </Border>
                    <ContentPresenter
                        Grid.Column="2"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Header}"
                        ContentSource="Header"
                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock
                        Grid.Column="4"
                        Margin="{TemplateBinding Padding}"
                        VerticalAlignment="Center"
                        Opacity="0.7"
                        Text="{TemplateBinding InputGestureText}" />
                    <Path x:Name="RightArrow" Fill="Transparent" />
                    <Popup
                        x:Name="PART_Popup"
                        AllowsTransparency="True"
                        Focusable="False"
                        HorizontalOffset="-2"
                        IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        Placement="Right"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                        VerticalOffset="-3">
                        <Border
                            x:Name="SubMenuBorder"
                            Padding="2"
                            Background="#771b1b1c"
                            BorderBrush="#99FBFF"
                            BorderThickness="1">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            x:Name="OpaqueRect"
                                            Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                            Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                            Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                    </Canvas>
                                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>-->
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        Grid.IsSharedSizeScope="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter TargetName="templateRoot" Property="Background" Value="#3e3e40" />
                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="#3e3e40" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                    <Setter TargetName="Glyph" Property="Fill" Value="#FF707070" />
                    <Setter TargetName="RightArrow" Property="Fill" Value="#FF707070" />
                </Trigger>
                <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                    <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                    <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  List/Table/Grid stuff is below  -->

        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource bg_dark2}" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark2}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Foreground" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="{DynamicResource bg_dark3}" />
            <Setter Property="Foreground" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource bg_dark2}" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark2}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{DynamicResource bg_dark2}" />
            <Setter Property="Foreground" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{DynamicResource bg_dark3}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Padding" Value="5,5,5,5" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark1}" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bg_dark4}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Scrollbar  -->

        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="White" />
                    <GradientStop Offset="0.6" Color="White" />
                    <GradientStop Offset="1.2" Color="#DDDDDD" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="#FFF" />
                    <GradientStop Offset="1.0" Color="#CCC" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="#BBB" />
                    <GradientStop Offset="0.1" Color="#EEE" />
                    <GradientStop Offset="0.9" Color="#EEE" />
                    <GradientStop Offset="1.0" Color="#FFF" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            Name="Border"
                            Margin="1"
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                Fill="{StaticResource GlyphBrush}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Width="16"
                            Margin="8,0,-2,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="0" />
                </Grid.RowDefinitions>
                <Border
                    Grid.RowSpan="3"
                    Background="Transparent"
                    CornerRadius="2" />
                <RepeatButton
                    Grid.Row="0"
                    Height="18"
                    Command="ScrollBar.LineUpCommand"
                    Content="M 0 4 L 8 4 L 4 0 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
                <Track
                    Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Margin="1,0,1,0"
                            Background="{StaticResource HorizontalNormalBrush}"
                            BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Row="3"
                    Height="18"
                    Command="ScrollBar.LineDownCommand"
                    Content="M 0 0 L 4 4 L 8 0 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.ColumnSpan="3"
                    Background="#F0F0F0"
                    CornerRadius="2" />
                <RepeatButton
                    Grid.Column="0"
                    Width="18"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M 4 0 L 4 8 L 0 4 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
                <Track
                    Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Margin="0,1,0,1"
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Column="3"
                    Width="18"
                    Command="ScrollBar.LineRightCommand"
                    Content="M 0 0 L 4 4 L 0 8 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1" />
                            <ScrollBar
                                Name="PART_VerticalScrollBar"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--  CALENDAR  -->
        <SolidColorBrush x:Key="calendar_dayOfWeek" Color="BlanchedAlmond" />
        <SolidColorBrush x:Key="calendar_innerBorderColor" Color="#FFDEDEDE" />
        <Color
            x:Key="calendar_headerBg"
            A="255"
            B="#1F"
            G="#1F"
            R="#1F" />
        <Color
            x:Key="calendar_bodyBg"
            A="255"
            B="#2E"
            G="#2E"
            R="#2E" />
        <SolidColorBrush x:Key="calendar_todayBg" Color="DimGray" />
        <SolidColorBrush x:Key="calendar_todayFg" Color="Purple" />
        <SolidColorBrush x:Key="calendar_selectedBg" Color="DarkOliveGreen" />
        <SolidColorBrush x:Key="calendar_highlightBg" Color="OliveDrab" />
        <SolidColorBrush x:Key="calendar_dayFg" Color="White" />
        <Color
            x:Key="calendar_dayBg_col_inactive"
            A="255"
            B="#6F"
            G="#6F"
            R="#6F" />

        <SolidColorBrush x:Key="calendar_arrowCol" Color="GhostWhite" />
        <SolidColorBrush x:Key="calendar_headerCol" Color="GhostWhite" />
        <SolidColorBrush x:Key="calendar_monthYearCol" Color="GhostWhite" />

        <sys:Double x:Key="calendar_DayOfWeekfontSize">16</sys:Double>
        <sys:Double x:Key="calendar_HeaderfontSize">12</sys:Double>
        <sys:Double x:Key="calendar_DayfontSize">16</sys:Double>

        <Thickness x:Key="calendar_outerBorderThickness">0</Thickness>
        <CornerRadius x:Key="calendar_outerBorderRadius">0</CornerRadius>
        <Thickness x:Key="calendar_innerBorderThickness">1</Thickness>
        <CornerRadius x:Key="calendar_innerBorderRadius">0</CornerRadius>

        <ControlTemplate x:Key="CalendarItemTemplate1" TargetType="{x:Type CalendarItem}">
            <ControlTemplate.Resources>
                <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                    <TextBlock
                        Margin="0,6,0,6"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="Verdana"
                        FontSize="{StaticResource calendar_DayOfWeekfontSize}"
                        FontWeight="Bold"
                        Foreground="{StaticResource calendar_dayOfWeek}"
                        Text="{Binding}" />
                </DataTemplate>
            </ControlTemplate.Resources>
            <Grid x:Name="PART_Root">
                <Grid.Resources>
                    <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                </Grid.Resources>
                <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{StaticResource calendar_outerBorderThickness}"
                    CornerRadius="{StaticResource calendar_outerBorderRadius}">
                    <Border
                        BorderBrush="{StaticResource calendar_innerBorderColor}"
                        BorderThickness="{StaticResource calendar_innerBorderThickness}"
                        CornerRadius="{StaticResource calendar_innerBorderRadius}">
                        <Grid>
                            <Grid.Resources>
                                <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid Cursor="Hand">
                                        <Rectangle
                                            Fill="#11E5EBF1"
                                            Opacity="1"
                                            Stretch="Fill" />
                                        <Grid>
                                            <Path
                                                x:Name="path"
                                                Width="6"
                                                Height="10"
                                                Margin="14,-6,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                Fill="{StaticResource calendar_arrowCol}"
                                                Stretch="Fill" />
                                        </Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation
                                                            Storyboard.TargetName="path"
                                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                            To="#FF73A9D8"
                                                            Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="path"
                                                            Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                            To=".5"
                                                            Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                                <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid Cursor="Hand">
                                        <Rectangle
                                            Fill="#11E5EBF1"
                                            Opacity="1"
                                            Stretch="Fill" />
                                        <Grid>
                                            <Path
                                                x:Name="path"
                                                Width="6"
                                                Height="10"
                                                Margin="0,-6,14,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                Fill="{StaticResource calendar_arrowCol}"
                                                Stretch="Fill" />
                                        </Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation
                                                            Storyboard.TargetName="path"
                                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                            To="#FF73A9D8"
                                                            Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="path"
                                                            Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                            To=".5"
                                                            Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                                <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid Cursor="Hand">
                                        <ContentPresenter
                                            x:Name="buttonContent"
                                            Margin="1,4,1,9"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            TextElement.Foreground="{StaticResource calendar_headerCol}" />
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation
                                                            Storyboard.TargetName="buttonContent"
                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                            To="#FF73A9D8"
                                                            Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="buttonContent"
                                                            Storyboard.TargetProperty="Opacity"
                                                            To=".5"
                                                            Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Button
                                x:Name="PART_PreviousButton"
                                Grid.Row="0"
                                Grid.Column="0"
                                Width="28"
                                Height="20"
                                HorizontalAlignment="Left"
                                Focusable="False"
                                Template="{StaticResource PreviousButtonTemplate}" />
                            <Button
                                x:Name="PART_HeaderButton"
                                Grid.Row="0"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                FontSize="{StaticResource calendar_HeaderfontSize}"
                                FontWeight="Bold"
                                Template="{StaticResource HeaderButtonTemplate}" />
                            <Button
                                x:Name="PART_NextButton"
                                Grid.Row="0"
                                Grid.Column="2"
                                Width="28"
                                Height="20"
                                HorizontalAlignment="Right"
                                Focusable="False"
                                Template="{StaticResource NextButtonTemplate}" />
                            <Grid
                                x:Name="PART_MonthView"
                                Grid.Row="1"
                                Grid.ColumnSpan="3"
                                Margin="6,-1,6,6"
                                HorizontalAlignment="Center"
                                Visibility="Visible">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                            </Grid>
                            <Grid
                                x:Name="PART_YearView"
                                Grid.Row="1"
                                Grid.ColumnSpan="3"
                                Margin="6,-3,7,6"
                                HorizontalAlignment="Center"
                                Visibility="Hidden">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                            </Grid>
                        </Grid>
                    </Border>
                </Border>
                <Rectangle
                    x:Name="PART_DisabledVisual"
                    Fill="{StaticResource DisabledColor}"
                    Opacity="0"
                    RadiusX="2"
                    RadiusY="2"
                    Stretch="Fill"
                    Stroke="{StaticResource DisabledColor}"
                    StrokeThickness="1"
                    Visibility="Collapsed" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="PART_DisabledVisual"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                </Trigger>
                <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                    <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                    <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Calendar}">
            <Setter Property="Foreground" Value="#FF333333" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0.16" Color="{StaticResource calendar_headerBg}" />
                        <GradientStop Offset="0.16" Color="{StaticResource calendar_bodyBg}" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0" Color="#FFA3AEB9" />
                        <GradientStop Offset="0.375" Color="#FF8399A9" />
                        <GradientStop Offset="0.375" Color="#FF718597" />
                        <GradientStop Offset="1" Color="#FF617584" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                            <CalendarItem
                                x:Name="PART_CalendarItem"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Style="{TemplateBinding CalendarItemStyle}"
                                Template="{DynamicResource CalendarItemTemplate1}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CalendarCalendarDayButtonStyle1" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="MinWidth" Value="5" />
            <Setter Property="MinHeight" Value="5" />
            <Setter Property="FontSize" Value="{StaticResource calendar_DayfontSize}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <Rectangle
                                x:Name="TodayBackground"
                                Fill="{StaticResource calendar_todayBg}"
                                Opacity="0"
                                RadiusX="1"
                                RadiusY="1" />
                            <Rectangle
                                x:Name="SelectedBackground"
                                Fill="{StaticResource calendar_selectedBg}"
                                Opacity="0"
                                RadiusX="1"
                                RadiusY="1" />
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle
                                x:Name="HighlightBackground"
                                Fill="{StaticResource calendar_highlightBg}"
                                Opacity="0"
                                RadiusX="1"
                                RadiusY="1" />
                            <ContentPresenter
                                x:Name="NormalText"
                                Margin="5,1,5,1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextElement.Foreground="White" />
                            <Path
                                x:Name="Blackout"
                                Margin="3"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                                Fill="#FF000000"
                                Opacity="0"
                                RenderTransformOrigin="0.5,0.5"
                                Stretch="Fill" />
                            <Rectangle
                                x:Name="DayButtonFocusVisual"
                                IsHitTestVisible="false"
                                RadiusX="0"
                                RadiusY="0"
                                Stroke="#FF45D6FA"
                                Visibility="Collapsed" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="HighlightBackground"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.5"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="HighlightBackground"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.5"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="HighlightBackground"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="NormalText"
                                                Storyboard.TargetProperty="Opacity"
                                                To=".35"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="SelectedBackground"
                                                Storyboard.TargetProperty="Opacity"
                                                To=".75"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="DayButtonFocusVisual"
                                                Storyboard.TargetProperty="Visibility"
                                                Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="DayButtonFocusVisual"
                                                Storyboard.TargetProperty="Visibility"
                                                Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active" />
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="NormalText"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                To="{StaticResource calendar_dayBg_col_inactive}"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="RegularDay" />
                                    <VisualState x:Name="Today">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="TodayBackground"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BlackoutDayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NormalDay" />
                                    <VisualState x:Name="BlackoutDay">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Blackout"
                                                Storyboard.TargetProperty="Opacity"
                                                To=".2"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarCalendarButtonStyle1" TargetType="{x:Type CalendarButton}">
            <Setter Property="Background" Value="#FFBADDE9" />
            <Setter Property="MinWidth" Value="40" />
            <Setter Property="MinHeight" Value="42" />
            <Setter Property="FontSize" Value="{StaticResource calendar_DayfontSize}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                        <Grid>
                            <Rectangle
                                x:Name="SelectedBackground"
                                Fill="{TemplateBinding Background}"
                                Opacity="0"
                                RadiusX="1"
                                RadiusY="1" />
                            <Rectangle
                                x:Name="Background"
                                Fill="{TemplateBinding Background}"
                                Opacity="0"
                                RadiusX="1"
                                RadiusY="1" />
                            <ContentPresenter
                                x:Name="NormalText"
                                Margin="1,0,1,1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextElement.Foreground="{StaticResource calendar_monthYearCol}" />
                            <Rectangle
                                x:Name="CalendarButtonFocusVisual"
                                IsHitTestVisible="false"
                                RadiusX="1"
                                RadiusY="1"
                                Stroke="#FF45D6FA"
                                Visibility="Collapsed" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Background"
                                                Storyboard.TargetProperty="Opacity"
                                                To=".5"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Background"
                                                Storyboard.TargetProperty="Opacity"
                                                To=".5"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="SelectedBackground"
                                                Storyboard.TargetProperty="Opacity"
                                                To=".75"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active" />
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="NormalText"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                To="#FF777777"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="CalendarButtonFocusVisual"
                                                Storyboard.TargetProperty="Visibility"
                                                Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="CalendarButtonFocusVisual"
                                                Storyboard.TargetProperty="Visibility"
                                                Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
