<Application x:Class="YouTravel.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:YouTravel" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
			 StartupUri="Agent/AgentMainWindow.xaml">
    <Application.Resources>
		<!-- Other styles -->

		<!-- https://stackoverflow.com/questions/13624606-->
		<Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="Transparent">
							<ContentPresenter/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Dark Theme -->

		<SolidColorBrush x:Key="bg_dark0" Color="#1F1F1F"/>
		<SolidColorBrush x:Key="bg_dark1" Color="#2E2E2E"/>
		<SolidColorBrush x:Key="bg_dark2" Color="#383838"/>
		<SolidColorBrush x:Key="bg_dark3" Color="#666666"/>
		<SolidColorBrush x:Key="bg_dark4" Color="#858585"/>

		<Style TargetType="{x:Type Window}" x:Key="WinDark">
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type UserControl}" x:Key="UCDark">
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type Button}">
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}" BorderBrush="LightGray" BorderThickness="1">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark3}"/>
					<Setter Property="Cursor" Value="Hand"/>
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type CheckBox}">
			<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type RadioButton}">
			<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type ListBoxItem}">
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type TabControl}">
			<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid>
							<Border 
                             Name="Border"
                             Background="#F0F0F0"
                             BorderBrush="LightGray" 
                             BorderThickness="1,1,1,0" 
                             CornerRadius="4,4,0,0" 
                             Margin="0,0,2,0" SnapsToDevicePixels="True" >
								<TextBlock FontSize="15" 
                                       HorizontalAlignment="Center" 
                                       Name="TextBlock" 
                                       Foreground="DarkGray">
                            <ContentPresenter x:Name="ContentSite"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               ContentSource="Header"
                                               Margin="12,2,12,2"/>
								</TextBlock>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource bg_dark3}"/>
								<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource bg_dark3}"/>
								<Setter TargetName="TextBlock" Property="Background" Value="{DynamicResource bg_dark2}"/>
								<Setter TargetName="TextBlock" Property="Foreground" Value="White"/>
								<Setter TargetName="TextBlock" Property="FontWeight" Value="SemiBold"/>
								<Setter TargetName="TextBlock" Property="FontSize" Value="14"/>
								<Setter TargetName="Border" Property="Margin" Value="0,0,2,-1" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource bg_dark1}"/>
								<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource bg_dark1}"/>
								<Setter TargetName="TextBlock" Property="Background" Value="{DynamicResource bg_dark0}"/>
								<Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource bg_dark3}"/>
								<Setter TargetName="TextBlock" Property="FontSize" Value="14"/>
								<Setter TargetName="Border" Property="Margin" Value="0,0,2,-1" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True" SourceName="Border" >
								<Setter TargetName="Border" Property="Background" Value="White" />
								<Setter TargetName="Border" Property="BorderBrush" Value="DarkGray" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type TreeView}">
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type TreeViewItem}">
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<!-- Toolbar Theme -->

		<Style TargetType="{x:Type ToolBar}">
			<Setter Property="Padding" Value="4"/>
			<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="16"/>
		</Style>

		<Style TargetType="{x:Type ToolBarTray}">
			<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
					<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<Style TargetType="{x:Type ToolBarOverflowPanel}">
			<Setter Property="Visibility" Value="Collapsed"/>
		</Style>

		<SolidColorBrush x:Key="ToolBarButtonHover" Color="#210080FF"/>
		<SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5"/>
		<SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFEEF5FD"/>
		<SolidColorBrush x:Key="ToolBarVerticalBackground" Color="#FFEEF5FD"/>
		<SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D"/>
		<SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#FFEEF5FD"/>
		<SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="#FFEEF5FD"/>
		<Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
			<Setter Property="Margin" Value="0,0,11,0"/>
			<Setter Property="CornerRadius" Value="3,3,3,3"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
					<Setter Property="CornerRadius" Value="0,0,0,0"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<!-- The thingy to move toolbars around -->
						<Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
							<Rectangle>
								<Rectangle.Fill>
									<DrawingBrush TileMode="Tile" ViewboxUnits="Absolute" Viewbox="0,0,4,4" ViewportUnits="Absolute" Viewport="0,0,4,4">
										<DrawingBrush.Drawing>
											<DrawingGroup>
												<GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
												<GeometryDrawing Brush="{StaticResource bg_dark0}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
											</DrawingGroup>
										</DrawingBrush.Drawing>
									</DrawingBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Cursor" Value="SizeAll"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">

			<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
			<Setter Property="MinHeight" Value="0"/>
			<Setter Property="MinWidth" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<!-- Thingy with the arrow at the end of every toolbar. -->
						<Border x:Name="Bd" Visibility="Collapsed" Background="{StaticResource bg_dark3}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
							<Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="6">
								<!-- 2 elements were removed here, which effectively draw a shadow for the little arrow thing. -->
								<Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
								<Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
							</Canvas>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
			<Setter Property="MinHeight" Value="0"/>
			<Setter Property="MinWidth" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="true">
							<Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="7">
								<Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
								<Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
								<Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
								<Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
							</Canvas>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<ControlTemplate x:Key="ToolBarTemplate1" TargetType="{x:Type ToolBar}">
			<Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
				<Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
					<!-- Background and Foreground are changed here. -->
					<ToggleButton x:Name="OverflowButton" 
								  Background="{DynamicResource bg_dark3}"
								  Foreground="White"
								  ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"/>
					<Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="false">
						<theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
							<Border x:Name="ToolBarSubMenuBorder" Background="{StaticResource ToolBarSubMenuBackground}" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" RenderOptions.ClearTypeHint="Enabled">
								<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
							</Border>
						</theme:SystemDropShadowChrome>
					</Popup>
				</Grid>
				<Border x:Name="MainPanelBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
					<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
						<Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
						<ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
						<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</DockPanel>
				</Border>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsOverflowOpen" Value="true">
					<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
				</Trigger>
				<Trigger Property="Header" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="ToolBarTray.IsLocked" Value="true">
					<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
					<Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
					<Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
					<Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
					<Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
					<Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
					<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
					<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
					<Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
					<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
					<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
					<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
					<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
					<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
					<Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<!-- Menu Theme -->

		<Style TargetType="{x:Type Menu}">
			<Setter Property="Padding" Value="4"/>
			<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="16"/>
		</Style>

		<!-- TODO: Please fix this somehow. Why is this so poorly designed? I hate you, Micro$oft. -->
		<Style TargetType="{x:Type MenuItem}">
			<Setter Property="Padding" Value="4"/>
			<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="16"/>
			<Style.Triggers>
				<Trigger Property="MenuItem.Role" Value="TopLevelHeader">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type MenuItem}">
								<Border x:Name="templateRoot" 
										SnapsToDevicePixels="true"
                                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                                        Background="{TemplateBinding Control.Background}"
                                        BorderBrush="{TemplateBinding Control.BorderBrush}">
									<Grid VerticalAlignment="Center">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<ContentPresenter x:Name="Icon" 
														  ContentSource="Icon" 
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
														  VerticalAlignment="Center"
                                                          HorizontalAlignment="Center" 
														  Width="16" 
														  Height="16" 
														  Margin="3"/>
										<Path x:Name="GlyphPanel" 
											  Data="F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z" 
											  FlowDirection="LeftToRight" 
											  Margin="3"
                                              Visibility="Collapsed" 
											  VerticalAlignment="Center" 
											  Fill="{StaticResource bg_dark0}"/>
										<ContentPresenter Grid.Column="1" 
														  ContentSource="Header" 
														  RecognizesAccessKey="true"
                                                          Margin="{TemplateBinding Control.Padding}"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
										<Popup x:Name="PART_Popup" 
											   AllowsTransparency="true" 
											   Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               Placement="Bottom"
                                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                               PlacementTarget="{Binding ElementName=templateRoot}">
											<Border x:Name="SubMenuBorder" 
													Background="{DynamicResource bg_dark0}" 
													BorderBrush="{DynamicResource bg_dark0}"
                                                    BorderThickness="1" 
													Padding="2">
												<ScrollViewer x:Name="SubMenuScrollViewer"
                                                             Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
													<Grid RenderOptions.ClearTypeHint="Enabled">
														<Canvas Height="0" 
																Width="0" 
																HorizontalAlignment="Left" 
																VerticalAlignment="Top">
															<Rectangle Name="OpaqueRect" 
																	   Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
																	   Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                                       Fill="{Binding ElementName=SubMenuBorder, Path=Background}"/>
														</Canvas>
														<ItemsPresenter x:Name="ItemsPresenter" 
																		KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                        KeyboardNavigation.TabNavigation="Cycle" 
																		Grid.IsSharedSizeScope="true"
                                                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
													</Grid>
												</ScrollViewer>
											</Border>
										</Popup>
									</Grid>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
										<Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
									</Trigger>
									<Trigger Value="{x:Null}" Property="MenuItem.Icon">
										<Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="MenuItem.IsChecked" Value="true">
										<Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
										<Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="MenuItem.IsHighlighted" Value="true">
										<Setter TargetName="templateRoot" Value="{StaticResource bg_dark3}" Property="Border.Background"/>
										<Setter TargetName="templateRoot" Value="{StaticResource bg_dark4}" Property="Border.BorderBrush"/>
									</Trigger>
									<Trigger Property="UIElement.IsEnabled" Value="false">
										<Setter TargetName="templateRoot" Value="#FF7F7070" Property="TextElement.Foreground"/>
										<Setter TargetName="GlyphPanel" Value="#FF707070" Property="Shape.Fill"/>
									</Trigger>
									<Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
										<Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}"
                                                Property="Canvas.Top"/>
										<Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}"
                                                Property="Canvas.Left"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- List/Table/Grid stuff is below -->

		<Style TargetType="{x:Type ListView}">
			<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type ListViewItem}">
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type GridViewColumnHeader}">
			<Setter Property="Background" Value="{DynamicResource bg_dark3}"/>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type DataGrid}">
			<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type DataGridRow}">
			<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="Background" Value="{DynamicResource bg_dark3}"/>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		
		<!-- Scrollbar -->

		<SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
		<SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
		<SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
		<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
		<SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
		<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
		<SolidColorBrush x:Key="GlyphBrush" Color="#444" />
		<SolidColorBrush x:Key="NormalBrush" Color="#888" />
		<SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
		<SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
		<SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

		<LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
			<GradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="White" Offset="0.0" />
					<GradientStop Color="White" Offset="0.6" />
					<GradientStop Color="#DDDDDD" Offset="1.2"/>
				</GradientStopCollection>
			</GradientBrush.GradientStops>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
			<GradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#FFF" Offset="0.0"/>
					<GradientStop Color="#CCC" Offset="1.0"/>
				</GradientStopCollection>
			</GradientBrush.GradientStops>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
			<GradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#BBB" Offset="0.0"/>
					<GradientStop Color="#EEE" Offset="0.1"/>
					<GradientStop Color="#EEE" Offset="0.9"/>
					<GradientStop Color="#FFF" Offset="1.0"/>
				</GradientStopCollection>
			</GradientBrush.GradientStops>
		</LinearGradientBrush>

		<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="Visibility" Value="Hidden"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
							<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="Visibility" Value="Hidden"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Black" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="16" Margin="8,0,-2,0"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition MaxHeight="0"/>
					<RowDefinition Height="0.00001*"/>
					<RowDefinition MaxHeight="0"/>
				</Grid.RowDefinitions>
				<Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
				<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
				<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
				<RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MaxWidth="18"/>
					<ColumnDefinition Width="0.00001*"/>
					<ColumnDefinition MaxWidth="18"/>
				</Grid.ColumnDefinitions>
				<Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
				<RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
				<Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
				<RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
			</Grid>
		</ControlTemplate>
		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="Height" Value="18" />
					<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
				</Trigger>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="18"/>
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter Grid.Column="1"/>
							<ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
							<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</Application.Resources>
</Application>
