<Application x:Class="YouTravel.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:YouTravel"
             StartupUri="Agent/ArrangementList.xaml">
    <Application.Resources>
		<!-- Other styles -->

		<!-- https://stackoverflow.com/questions/13624606-->
		<Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="Transparent">
							<ContentPresenter/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Dark Theme -->
		
		<SolidColorBrush x:Key="bg_dark0" Color="#454545"/>
		<SolidColorBrush x:Key="bg_dark1" Color="#555555"/>
		<SolidColorBrush x:Key="bg_dark2" Color="#656565"/>
		<SolidColorBrush x:Key="bg_dark3" Color="#757575"/>
		<SolidColorBrush x:Key="bg_dark4" Color="#858585"/>

		<Style TargetType="{x:Type Window}" x:Key="WinDark">
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Background" Value="{DynamicResource bg_dark0}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type Button}">
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}" BorderBrush="LightGray" BorderThickness="1">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark3}"/>
					<Setter Property="Cursor" Value="Hand"/>
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type CheckBox}">
			<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type RadioButton}">
			<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type TabControl}">
			<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<Style TargetType="{x:Type TabItem}">
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="False">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
					<Setter Property="Foreground" Value="White"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type Menu}">
			<Setter Property="Padding" Value="4"/>
			<Setter Property="Background" Value="{DynamicResource bg_dark3}"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="16"/>
		</Style>

		<Style TargetType="{x:Type MenuItem}">
			<Style.Triggers>
				<Trigger Property="MenuItem.Role" Value="TopLevelHeader">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type MenuItem}">
								<Border x:Name="templateRoot" 
										SnapsToDevicePixels="true"
                                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                                        Background="{TemplateBinding Control.Background}"
                                        BorderBrush="{TemplateBinding Control.BorderBrush}">
									<Grid VerticalAlignment="Center">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										
										<ContentPresenter x:Name="Icon" 
														  ContentSource="Icon" 
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
														  VerticalAlignment="Center"
                                                          HorizontalAlignment="Center" 
														  Width="16" 
														  Height="16" 
														  Margin="3"/>
										<Path x:Name="GlyphPanel" 
											  Data="F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z" 
											  FlowDirection="LeftToRight" 
											  Margin="3"
                                              Visibility="Collapsed" 
											  VerticalAlignment="Center" 
											  Fill="{TemplateBinding Control.Foreground}"/>
										<ContentPresenter Grid.Column="1" 
														  ContentSource="Header" 
														  RecognizesAccessKey="true"
                                                          Margin="{TemplateBinding Control.Padding}"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
										<Popup x:Name="PART_Popup" 
											   AllowsTransparency="true" 
											   Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               Placement="Bottom"
                                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                               PlacementTarget="{Binding ElementName=templateRoot}">
											<Border x:Name="SubMenuBorder" 
													Background="{DynamicResource bg_dark3}" 
													BorderBrush="{DynamicResource bg_dark3}"
                                                    BorderThickness="1" 
													Padding="2">
												<ScrollViewer x:Name="SubMenuScrollViewer"
                                                             Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
													<Grid RenderOptions.ClearTypeHint="Enabled">
														<Canvas Height="0" 
																Width="0" 
																HorizontalAlignment="Left" 
																VerticalAlignment="Top">
															<Rectangle Name="OpaqueRect" 
																	   Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
																	   Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                                       Fill="{Binding ElementName=SubMenuBorder, Path=Background}"/>
														</Canvas>
														<ItemsPresenter x:Name="ItemsPresenter" 
																		KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                        KeyboardNavigation.TabNavigation="Cycle" 
																		Grid.IsSharedSizeScope="true"
                                                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
													</Grid>
												</ScrollViewer>
											</Border>
										</Popup>
									</Grid>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
										<Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
									</Trigger>
									<Trigger Value="{x:Null}" Property="MenuItem.Icon">
										<Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="MenuItem.IsChecked" Value="true">
										<Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
										<Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="MenuItem.IsHighlighted" Value="true">
										<Setter TargetName="templateRoot" Value="#3D26A0DA" Property="Border.Background"/>
										<Setter TargetName="templateRoot" Value="#FF26A0DA" Property="Border.BorderBrush"/>
									</Trigger>
									<Trigger Property="UIElement.IsEnabled" Value="false">
										<Setter TargetName="templateRoot" Value="#FF707070" Property="TextElement.Foreground"/>
										<Setter TargetName="GlyphPanel" Value="#FF707070" Property="Shape.Fill"/>
									</Trigger>
									<Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
										<Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}"
                                                Property="Canvas.Top"/>
										<Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}"
                                                Property="Canvas.Left"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- List/Table/Grid stuff is below -->

		<Style TargetType="{x:Type ListView}">
			<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type ListViewItem}">
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type GridViewColumnHeader}">
			<Setter Property="Background" Value="{DynamicResource bg_dark3}"/>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type DataGrid}">
			<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type DataGridRow}">
			<Setter Property="Background" Value="{DynamicResource bg_dark2}"/>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="Background" Value="{DynamicResource bg_dark3}"/>
			<Setter Property="Foreground" Value="White"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark1}"/>
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="{DynamicResource bg_dark4}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Application.Resources>
</Application>
